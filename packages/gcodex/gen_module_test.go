package gcodex

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func Test_genSchemaCode(t *testing.T) {
	tbs := []*TableMetaData{
		&TableMetaData{
			PackageName: "schema",
			Name:        "user",
			Comment:     "用户表",
			Columns: []*ColumnType{
				&ColumnType{
					Name:       "user_name",
					StructTag:  "user_name",
					StorageKey: "user_name",
					Comment:    "用户名",
					FieldType:  TypeString,
					DefaultVal: DefaultValue[TypeString],
					MaxLen:     64,
					IsUnique:   true,
					UidxName:   "uidx_user_name",
				},
				&ColumnType{
					Name:          "una1",
					StructTag:     "una2",
					StorageKey:    "una2",
					Comment:       "una2eeeee",
					FieldType:     TypeInt,
					DefaultVal:    "dd",
					MaxLen:        64,
					MinLen:        10,
					IsNonNegative: false,
					Scale:         2,
					AutoInc:       true,
					IsSensitive:   true,
					IsImmutable:   false,
					IsOptional:    true,
					Enumerable:    false,
					// EnumVals:      `"11", "222", "333"`,
					EnumVals:     `1, 2, 33`,
					IsPrimary:    true,
					PkName:       "pkname",
					IsForeignKey: true,
					FkName:       "fkname",
					IsUnique:     true,
					UidxName:     "uidxname",
					IsIndex:      true,
					IdxName:      "idxname",
				},
				&ColumnType{
					Name:          "una2",
					StructTag:     "una2",
					StorageKey:    "una2",
					Comment:       "una2eeeee",
					FieldType:     TypeInt,
					DefaultVal:    "dd",
					MaxLen:        64,
					MinLen:        10,
					IsNonNegative: true,
					Scale:         2,
					Precision:     0,
					AutoInc:       true,
					IsSensitive:   true,
					IsImmutable:   false,
					IsOptional:    true,
					Enumerable:    false,
					EnumVals:      `"11", "222", "333"`,
					// EnumVals:      `1, 2, 33`,
					IsPrimary:    true,
					PkName:       "pkname",
					IsForeignKey: true,
					FkName:       "fkname",
					IsUnique:     true,
					UidxName:     "uidxname",
					IsIndex:      true,
					IdxName:      "idxname",
				},
				// &ColumnType{
				// 	Name:       "password",
				// 	StorageKey: "pwd",
				// 	Comment:    "密码",
				// 	FieldType:  TypeString,
				// 	DefaultVal: "",
				// 	MaxLen:     64,
				// },
				// &ColumnType{
				// 	Name:        "salt",
				// 	StructTag:   "salt",
				// 	StorageKey:  "salt",
				// 	Comment:     "密码盐",
				// 	FieldType:   TypeString,
				// 	DefaultVal:  "",
				// 	MaxLen:      64,
				// 	IsSensitive: true,
				// 	IsImmutable: true,
				// 	IsOptional:  true,
				// },
				// &ColumnType{
				// 	Name:        "avatar",
				// 	StructTag:   "avatar",
				// 	StorageKey:  "avatar",
				// 	Comment:     "头像",
				// 	FieldType:   TypeString,
				// 	DefaultVal:  "",
				// 	MaxLen:      1024,
				// 	IsSensitive: true,
				// 	IsImmutable: true,
				// 	IsOptional:  false,
				// },
				// &ColumnType{
				// 	Name:       "user_code",
				// 	Comment:    "用户码",
				// 	FieldType:  TypeString,
				// 	DefaultVal: "",
				// 	MaxLen:     32,
				// 	MinLen:     10,
				// 	IsOptional: false,
				// },
				// &ColumnType{
				// 	Name:        "phone",
				// 	Comment:     "联系方式",
				// 	FieldType:   TypeString,
				// 	DefaultVal:  "",
				// 	MaxLen:      16,
				// 	IsImmutable: true,
				// },
				// &ColumnType{
				// 	Name:        "is_deleted",
				// 	StructTag:   "is_deleted",
				// 	StorageKey:  "is_deleted",
				// 	Comment:     "是否删除",
				// 	FieldType:   TypeBool,
				// 	IsImmutable: true,
				// 	DefaultVal:  false,
				// 	Enumerable:  false,
				// 	IsIndex:     true,
				// },
				// &ColumnType{
				// 	Name:          "status",
				// 	StructTag:     "status",
				// 	StorageKey:    "status",
				// 	Comment:       "状态",
				// 	FieldType:     TypeInt,
				// 	Precision:     8,
				// 	DefaultVal:    0,
				// 	IsNonNegative: true,
				// 	Enumerable:    true,
				// 	EnumVals:      "0, 1, 2",
				// 	IsIndex:       true,
				// 	IdxName:       "idx_status",
				// },
				&ColumnType{
					Name:          "balance",
					StructTag:     "balance",
					StorageKey:    "balance",
					Comment:       "余额",
					FieldType:     TypeDecimal,
					DefaultVal:    0.00,
					IsNonNegative: true,
					Scale:         2,
					Precision:     8,
					EnumVals:      "1.1,2.2,3.3",
					Enumerable:    true,
				},
				&ColumnType{
					Name:          "balance2",
					StructTag:     "balance2",
					StorageKey:    "balance2",
					Comment:       "余额",
					FieldType:     TypeDecimal,
					DefaultVal:    0.00,
					IsNonNegative: true,
					Scale:         2,
					Precision:     10,
				},
				&ColumnType{
					Name:       "last_login_time",
					StructTag:  "last_login_time",
					StorageKey: "last_login_time",
					Comment:    "最后登录时间",
					FieldType:  TypeDatetime,
					IsOptional: true,
					IsIndex:    true,
					IdxName:    "idx_last_login_time",
				},
				// &ColumnType{
				// 	Name:        "created_at",
				// 	StructTag:   "created_at",
				// 	StorageKey:  "last_login_time",
				// 	Comment:     "创建时间",
				// 	FieldType:   TypeDatetime,
				// 	IsOptional:  true,
				// 	IsImmutable: true,
				// 	IsIndex:     true,
				// 	IdxName:     "idx_created_at",
				// },
				// &ColumnType{
				// 	Name:        "updated_at",
				// 	StructTag:   "updated_at",
				// 	StorageKey:  "updated_at",
				// 	Comment:     "最后登录时间",
				// 	FieldType:   TypeDatetime,
				// 	IsImmutable: true,
				// 	IsIndex:     true,
				// 	IdxName:     "idx_updated_at",
				// },
			},
			Edges: []*ModelRelationShip{
				&ModelRelationShip{
					From: "",
					To:   "",
					Ref:  "",
				},
			},
		},
	}
	opt := &SchemaOption{
		tmplName:    "ent.tmpl",
		idlFilePath: "./tmpl/model/",
		tarFilePath: "./dist/http/ent/schema/",
		tables:      tbs,
	}

	err := genSchemaCode(opt)
	assert.Nil(t, err, "genSchemaCode() success.")
}
