// Code generated by entc, DO NOT EDIT.

package ent

import (
	"gcodex/ent/schema"
	"gcodex/ent/todo"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	todoFields := schema.Todo{}.Fields()
	_ = todoFields
	// todoDescName is the schema descriptor for name field.
	todoDescName := todoFields[0].Descriptor()
	// todo.NameValidator is a validator for the "name" field. It is called by the builders before save.
	todo.NameValidator = func() func(string) error {
		validators := todoDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// todoDescValue is the schema descriptor for value field.
	todoDescValue := todoFields[2].Descriptor()
	// todo.DefaultValue holds the default value on creation for the value field.
	todo.DefaultValue = todoDescValue.Default.(string)
}
